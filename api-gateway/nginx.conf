events {
    worker_connections 1024;
}

http {
    # Security and rate limiting configuration
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=api:10m rate=30r/s;
    limit_req_zone $binary_remote_addr zone=websocket:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=upload:10m rate=1r/s;
    
    # Connection limiting zones
    limit_conn_zone $binary_remote_addr zone=perip:10m;
    limit_conn_zone $server_name zone=perserver:10m;
    
    # Request size limits
    client_max_body_size 10M;
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    
    # Timeouts
    client_body_timeout 12;
    client_header_timeout 12;
    keepalive_timeout 15;
    send_timeout 10;
    
    # Security headers (global)
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Hide nginx version
    server_tokens off;
    
    # Buffer sizes
    proxy_buffer_size 4k;
    proxy_buffers 8 4k;
    proxy_busy_buffers_size 8k;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/json application/xml+rss;

    # Upstream definitions - matching Docker service names
    upstream agent_intelligence {
        server agent-intelligence:3001;
    }

    upstream orchestration_pipeline {
        server orchestration-pipeline:3002;
    }

    upstream capability_registry {
        server capability-registry:3003;
    }

    upstream security_gateway {
        server security-gateway:3004;
    }

    upstream discussion_orchestration {
        server discussion-orchestration:3005;
    }

    upstream artifact_service {
        server artifact-service:3006;
    }

    upstream llm_service {
        server llm-service:3007;
    }

    # Frontend upstream for hot reloading
    upstream frontend {
        server frontend:5173;
    }

    # WebSocket upgrade configuration
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    # CORS origin mapping for security
    map $http_origin $cors_origin {
        ~^https?://(localhost|127\.0\.0\.1)(:[0-9]+)?$ $http_origin;
        ~^https?://[^/]+\.local(:[0-9]+)?$ $http_origin;
        ~^https?://[^/]+\.ngrok-free\.app$ $http_origin;
        ~^https?://[^/]+\.vercel\.app$ $http_origin;
        ~^https?://[^/]+\.netlify\.app$ $http_origin;
        default "";
    }

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    server {
        listen 80;
        
        # Connection limits
        limit_conn perip 20;
        limit_conn perserver 1000;

        # Frontend static files
        location / {
            # General rate limiting for frontend
            limit_req zone=general burst=20 nodelay;
            
            # Serve static files from dist directory
            root /var/www/html;
            index index.html;
            
            # Try to serve static files first, fallback to index.html for SPA routing
            try_files $uri $uri/ /index.html;
            
            # Cache static assets
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
                access_log off;
            }
            
            # Don't cache HTML files
            location ~* \.html$ {
                expires -1;
                add_header Cache-Control "no-cache, no-store, must-revalidate";
                add_header Pragma "no-cache";
            }
        }
        
        # Development frontend server (for live development)
        location /dev {
            # Strip /dev prefix and proxy to Vite dev server
            rewrite ^/dev(.*)$ $1 break;
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support for Vite HMR
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_cache_bypass $http_upgrade;
        }

        # Vite HMR WebSocket endpoint (for development)
        location /dev/@vite/client {
            rewrite ^/dev(.*)$ $1 break;
            proxy_pass http://frontend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
        
        # Health check endpoint
        location /health {
            # Handle preflight OPTIONS requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' $cors_origin always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,X-Session-ID,X-Security-Level,Content-Type,Range,Authorization,X-User-ID, X-Timestamp,X-Correlation-ID,X-Client-Version,X-Request-ID,X-Environment,x-csrf-token' always;
                add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Max-Age' 1728000 always;
                add_header 'Content-Type' 'text/plain; charset=utf-8' always;
                add_header 'Content-Length' 0 always;
                return 204;
            }
            
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Metrics endpoint for Prometheus (nginx stub_status)
        location /metrics {
            stub_status on;
            access_log off;
            allow all;  # In production, restrict this to Prometheus server
            add_header Content-Type text/plain;
        }

        # Nginx status endpoint for nginx-exporter
        location /nginx_status {
            stub_status on;
            access_log off;
            allow all;  # In production, restrict this to nginx-exporter
            add_header Content-Type text/plain;
        }

        # ===== SECURITY GATEWAY ROUTES =====
        # Authentication routes (from Postman collection)
        location /api/v1/auth {
            # Strict rate limiting for authentication endpoints
            limit_req zone=auth burst=10 nodelay;
            
            # Handle preflight OPTIONS requests - NEVER reach the backend
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' $http_origin always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Session-ID,X-Security-Level,X-User-ID,X-Timestamp,X-Correlation-ID,X-Client-Version,X-Request-ID,X-Environment,x-csrf-token' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Max-Age' 1728000 always;
                add_header 'Content-Type' 'text/plain; charset=utf-8' always;
                add_header 'Content-Length' 0 always;
                return 204;
            }
            
            proxy_pass http://security_gateway;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Add CORS headers to all responses
            add_header 'Access-Control-Allow-Origin' $http_origin always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Session-ID,X-Security-Level,X-User-ID,X-Timestamp,X-Correlation-ID,X-Client-Version,X-Request-ID,X-Environment' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
        }

        # Security routes
        location /api/v1/security {
            # Handle preflight OPTIONS requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' $http_origin always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Session-ID,X-Security-Level,X-User-ID,X-Timestamp,X-Correlation-ID,X-Client-Version,X-Request-ID,X-Environment,x-csrf-token' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Max-Age' 1728000 always;
                add_header 'Content-Type' 'text/plain; charset=utf-8' always;
                add_header 'Content-Length' 0 always;
                return 204;
            }
            
            proxy_pass http://security_gateway;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Add CORS headers to all responses
            add_header 'Access-Control-Allow-Origin' $http_origin always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Session-ID,X-Security-Level,X-User-ID,X-Timestamp,X-Correlation-ID,X-Client-Version,X-Request-ID,X-Environment' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
        }

        # Approval routes
        location /api/v1/approvals {
            # Handle preflight OPTIONS requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' $http_origin always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Session-ID,X-Security-Level,X-User-ID,X-Timestamp,X-Correlation-ID,X-Client-Version,X-Request-ID,X-Environment,x-csrf-token' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Max-Age' 1728000 always;
                add_header 'Content-Type' 'text/plain; charset=utf-8' always;
                add_header 'Content-Length' 0 always;
                return 204;
            }
            
            proxy_pass http://security_gateway;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Add CORS headers to all responses
            add_header 'Access-Control-Allow-Origin' $http_origin always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Session-ID,X-Security-Level,X-User-ID,X-Timestamp,X-Correlation-ID,X-Client-Version,X-Request-ID,X-Environment' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
        }

        # User management routes
        location /api/v1/users {
            # Handle preflight OPTIONS requests - NEVER reach the backend
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' $http_origin always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Session-ID,X-Security-Level,X-User-ID,X-Timestamp,X-Correlation-ID,X-Client-Version,X-Request-ID,X-Environment,x-csrf-token' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Max-Age' 1728000 always;
                add_header 'Content-Type' 'text/plain; charset=utf-8' always;
                add_header 'Content-Length' 0 always;
                return 204;
            }
            
            proxy_pass http://security_gateway;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Add CORS headers to all responses
            add_header 'Access-Control-Allow-Origin' $http_origin always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Session-ID,X-Security-Level,X-User-ID,X-Timestamp,X-Correlation-ID,X-Client-Version,X-Request-ID,X-Environment' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
        }

        # Audit routes
        location /api/v1/audit {
            # Handle preflight OPTIONS requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' $http_origin always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Session-ID,X-Security-Level,X-User-ID,X-Timestamp,X-Correlation-ID,X-Client-Version,X-Request-ID,X-Environment,x-csrf-token' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Max-Age' 1728000 always;
                add_header 'Content-Type' 'text/plain; charset=utf-8' always;
                add_header 'Content-Length' 0 always;
                return 204;
            }
            
            proxy_pass http://security_gateway;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Add CORS headers to all responses
            add_header 'Access-Control-Allow-Origin' $http_origin always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Session-ID,X-Security-Level,X-User-ID,X-Timestamp,X-Correlation-ID,X-Client-Version,X-Request-ID,X-Environment' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
        }

        # Knowledge routes - Route to Security Gateway for knowledge queries
        location /api/v1/knowledge {
            # Rate limiting for knowledge operations (uploads are more expensive)
            limit_req zone=upload burst=5 nodelay;
            
            # Handle preflight OPTIONS requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' $http_origin always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Session-ID,X-Security-Level,X-User-ID,X-Timestamp,X-Correlation-ID,X-Client-Version,X-Request-ID,X-Environment,x-csrf-token' always;
                add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Max-Age' 1728000 always;
                add_header 'Content-Type' 'text/plain; charset=utf-8' always;
                add_header 'Content-Length' 0 always;
                return 204;
            }
            
            # Knowledge queries should go to security gateway service (functional implementation)
            proxy_pass http://security_gateway;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Add CORS headers to all responses
            add_header 'Access-Control-Allow-Origin' $http_origin always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Session-ID,X-Security-Level,X-User-ID,X-Timestamp,X-Correlation-ID,X-Client-Version,X-Request-ID,X-Environment' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
        }

        # Contact routes - Route to Security Gateway for contact management
        location /api/v1/contacts {
            # Handle preflight OPTIONS requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' $http_origin always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Session-ID,X-Security-Level,X-User-ID,X-Timestamp,X-Correlation-ID,X-Client-Version,X-Request-ID,X-Environment,x-csrf-token' always;
                add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Max-Age' 1728000 always;
                add_header 'Content-Type' 'text/plain; charset=utf-8' always;
                add_header 'Content-Length' 0 always;
                return 204;
            }
            
            # Contact management should go to security gateway service
            proxy_pass http://security_gateway;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Add CORS headers to all responses
            add_header 'Access-Control-Allow-Origin' $http_origin always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Session-ID,X-Security-Level,X-User-ID,X-Timestamp,X-Correlation-ID,X-Client-Version,X-Request-ID,X-Environment' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
        }

        # Project routes - Route to Security Gateway for project management
        location /api/v1/projects {
            # Handle preflight OPTIONS requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' $http_origin always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Session-ID,X-Security-Level,X-User-ID,X-Timestamp,X-Correlation-ID,X-Client-Version,X-Request-ID,X-Environment,x-csrf-token' always;
                add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Max-Age' 1728000 always;
                add_header 'Content-Type' 'text/plain; charset=utf-8' always;
                add_header 'Content-Length' 0 always;
                return 204;
            }
            
            # Project management should go to security gateway service
            proxy_pass http://security_gateway;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Add CORS headers to all responses
            add_header 'Access-Control-Allow-Origin' $http_origin always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Session-ID,X-Security-Level,X-User-ID,X-Timestamp,X-Correlation-ID,X-Client-Version,X-Request-ID,X-Environment' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
        }

        # ===== AGENT INTELLIGENCE ROUTES =====
        # Agent routes (from Postman collection)
        location /api/v1/agents {
            # API rate limiting
            limit_req zone=api burst=50 nodelay;
            
            # Handle preflight OPTIONS requests - NEVER reach the backend
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' $http_origin always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Session-ID,X-Security-Level,X-User-ID,X-Timestamp,X-Correlation-ID,X-Client-Version,X-Request-ID,X-Environment,x-csrf-token' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Max-Age' 1728000 always;
                add_header 'Content-Type' 'text/plain; charset=utf-8' always;
                add_header 'Content-Length' 0 always;
                return 204;
            }
            
            proxy_pass http://agent_intelligence;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Add CORS headers to all responses
            add_header 'Access-Control-Allow-Origin' $http_origin always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Session-ID,X-Security-Level,X-User-ID,X-Timestamp,X-Correlation-ID,X-Client-Version,X-Request-ID,X-Environment' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
        }

        # Persona routes (from Postman collection)
        location /api/v1/personas {
            # Handle preflight OPTIONS requests - NEVER reach the backend
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' $http_origin always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Session-ID,X-Security-Level,X-User-ID,X-Timestamp,X-Correlation-ID,X-Client-Version,X-Request-ID,X-Environment,x-csrf-token' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Max-Age' 1728000 always;
                add_header 'Content-Type' 'text/plain; charset=utf-8' always;
                add_header 'Content-Length' 0 always;
                return 204;
            }
            
            proxy_pass http://agent_intelligence;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Add CORS headers to all responses
            add_header 'Access-Control-Allow-Origin' $http_origin always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Session-ID,X-Security-Level,X-User-ID,X-Timestamp,X-Correlation-ID,X-Client-Version,X-Request-ID,X-Environment' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
        }

        # Discussion routes (from Postman collection) - CRUD operations via Agent Intelligence
        location /api/v1/discussions {
            # Handle preflight OPTIONS requests - NEVER reach the backend
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' $http_origin always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Session-ID,X-Security-Level,X-User-ID,X-Timestamp,X-Correlation-ID,X-Client-Version,X-Request-ID,X-Environment,x-csrf-token' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Max-Age' 1728000 always;
                add_header 'Content-Type' 'text/plain; charset=utf-8' always;
                add_header 'Content-Length' 0 always;
                return 204;
            }
            
            # Discussion CRUD operations go to agent intelligence service
            proxy_pass http://agent_intelligence;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Add CORS headers to all responses
            add_header 'Access-Control-Allow-Origin' $http_origin always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Session-ID,X-Security-Level,X-User-ID,X-Timestamp,X-Correlation-ID,X-Client-Version,X-Request-ID,X-Environment' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
        }

        # ===== ORCHESTRATION PIPELINE ROUTES =====
        # Operation routes (from Postman collection)
        location /api/v1/operations {
            # Handle preflight OPTIONS requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' $http_origin always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Session-ID,X-Security-Level,X-User-ID,X-Timestamp,X-Correlation-ID,X-Client-Version,X-Request-ID,X-Environment,x-csrf-token' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Max-Age' 1728000 always;
                add_header 'Content-Type' 'text/plain; charset=utf-8' always;
                add_header 'Content-Length' 0 always;
                return 204;
            }
            
            proxy_pass http://orchestration_pipeline;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Add CORS headers to all responses
            add_header 'Access-Control-Allow-Origin' $http_origin always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Session-ID,X-Security-Level,X-User-ID,X-Timestamp,X-Correlation-ID,X-Client-Version,X-Request-ID,X-Environment' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
        }

        # ===== CAPABILITY REGISTRY ROUTES =====
        # Capability routes (from Postman collection)
        location /api/v1/capabilities {
            # Handle preflight OPTIONS requests - NEVER reach the backend
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' $http_origin always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Session-ID,X-Security-Level,X-User-ID,X-Timestamp,X-Correlation-ID,X-Client-Version,X-Request-ID,X-Environment,x-csrf-token' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Max-Age' 1728000 always;
                add_header 'Content-Type' 'text/plain; charset=utf-8' always;
                add_header 'Content-Length' 0 always;
                return 204;
            }
            
            proxy_pass http://capability_registry;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Add CORS headers to all responses
            add_header 'Access-Control-Allow-Origin' $http_origin always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Session-ID,X-Security-Level,X-User-ID,X-Timestamp,X-Correlation-ID,X-Client-Version,X-Request-ID,X-Environment' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
        }

        # Tools routes (from capability registry service)
        location /api/v1/tools {
            # Handle preflight OPTIONS requests - NEVER reach the backend
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' $http_origin always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Session-ID,X-Security-Level,X-User-ID,X-Timestamp,X-Correlation-ID,X-Client-Version,X-Request-ID,X-Environment,x-csrf-token' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Max-Age' 1728000 always;
                add_header 'Content-Type' 'text/plain; charset=utf-8' always;
                add_header 'Content-Length' 0 always;
                return 204;
            }
            
            proxy_pass http://capability_registry;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Tool execution can take longer
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
            
            # Add CORS headers to all responses
            add_header 'Access-Control-Allow-Origin' $http_origin always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Session-ID,X-Security-Level,X-User-ID,X-Timestamp,X-Correlation-ID,X-Client-Version,X-Request-ID,X-Environment' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
        }

        # MCP routes (from capability registry service)
        location /api/v1/mcp {
            # Handle preflight OPTIONS requests - NEVER reach the backend
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' $http_origin always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Session-ID,X-Security-Level,X-User-ID,X-Timestamp,X-Correlation-ID,X-Client-Version,X-Request-ID,X-Environment,x-csrf-token' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Max-Age' 1728000 always;
                add_header 'Content-Type' 'text/plain; charset=utf-8' always;
                add_header 'Content-Length' 0 always;
                return 204;
            }
            
            proxy_pass http://capability_registry;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # MCP uploads can be larger
            client_max_body_size 5M;
            
            # Add CORS headers to all responses
            add_header 'Access-Control-Allow-Origin' $http_origin always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Session-ID,X-Security-Level,X-User-ID,X-Timestamp,X-Correlation-ID,X-Client-Version,X-Request-ID,X-Environment' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
        }

        # ===== ARTIFACT SERVICE ROUTES =====
        # Artifact routes (from artifact service)
        location /api/v1/artifacts {
            # Handle preflight OPTIONS requests - NEVER reach the backend
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' $http_origin always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Session-ID,X-Security-Level,X-User-ID,X-Timestamp,X-Correlation-ID,X-Client-Version,X-Request-ID,X-Environment,x-csrf-token' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Max-Age' 1728000 always;
                add_header 'Content-Type' 'text/plain; charset=utf-8' always;
                add_header 'Content-Length' 0 always;
                return 204;
            }
            
            proxy_pass http://artifact_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Add CORS headers to all responses
            add_header 'Access-Control-Allow-Origin' $http_origin always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Session-ID,X-Security-Level,X-User-ID,X-Timestamp,X-Correlation-ID,X-Client-Version,X-Request-ID,X-Environment' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
        }

        # ===== DISCUSSION ORCHESTRATION ROUTES =====
        # Discussion orchestration info route (from Postman collection)
        location /api/v1/info {
            # Handle preflight OPTIONS requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' $http_origin always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Session-ID,X-Security-Level,X-User-ID,X-Timestamp,X-Correlation-ID,X-Client-Version,X-Request-ID,X-Environment,x-csrf-token' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Max-Age' 1728000 always;
                add_header 'Content-Type' 'text/plain; charset=utf-8' always;
                add_header 'Content-Length' 0 always;
                return 204;
            }
            
            proxy_pass http://discussion_orchestration;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Add CORS headers to all responses
            add_header 'Access-Control-Allow-Origin' $http_origin always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Session-ID,X-Security-Level,X-User-ID,X-Timestamp,X-Correlation-ID,X-Client-Version,X-Request-ID,X-Environment' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
        }

        # ===== LLM SERVICE ROUTES =====
        # User LLM API routes (must come before general LLM routes for proper matching)
        location /api/v1/user/llm {
            # Handle preflight OPTIONS requests - NEVER reach the backend
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' $http_origin always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Session-ID,X-Security-Level,X-User-ID,X-Timestamp,X-Correlation-ID,X-Client-Version,X-Request-ID,X-Environment,x-csrf-token' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Max-Age' 1728000 always;
                add_header 'Content-Type' 'text/plain; charset=utf-8' always;
                add_header 'Content-Length' 0 always;
                return 204;
            }
            
            proxy_pass http://llm_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # LLM requests can take longer
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
            
            # Add CORS headers to all responses
            add_header 'Access-Control-Allow-Origin' $http_origin always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Session-ID,X-Security-Level,X-User-ID,X-Timestamp,X-Correlation-ID,X-Client-Version,X-Request-ID,X-Environment' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
        }

        # User LLM Provider routes (specific routes must come before general routes)
        location /api/v1/llm/my-providers {
            # Handle preflight OPTIONS requests - NEVER reach the backend
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' $http_origin always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Session-ID,X-Security-Level,X-User-ID,X-Timestamp,X-Correlation-ID,X-Client-Version,X-Request-ID,X-Environment,x-csrf-token' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Max-Age' 1728000 always;
                add_header 'Content-Type' 'text/plain; charset=utf-8' always;
                add_header 'Content-Length' 0 always;
                return 204;
            }
            
            proxy_pass http://security_gateway;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Add CORS headers to all responses
            add_header 'Access-Control-Allow-Origin' $http_origin always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Session-ID,X-Security-Level,X-User-ID,X-Timestamp,X-Correlation-ID,X-Client-Version,X-Request-ID,X-Environment' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
        }

        # General LLM API routes (for other LLM service endpoints)
        location /api/v1/llm {
            # Handle preflight OPTIONS requests - NEVER reach the backend
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' $http_origin always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Session-ID,X-Security-Level,X-User-ID,X-Timestamp,X-Correlation-ID,X-Client-Version,X-Request-ID,X-Environment,x-csrf-token' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Max-Age' 1728000 always;
                add_header 'Content-Type' 'text/plain; charset=utf-8' always;
                add_header 'Content-Length' 0 always;
                return 204;
            }
            
            proxy_pass http://llm_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # LLM requests can take longer
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
            
            # Add CORS headers to all responses
            add_header 'Access-Control-Allow-Origin' $http_origin always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Session-ID,X-Security-Level,X-User-ID,X-Timestamp,X-Correlation-ID,X-Client-Version,X-Request-ID,X-Environment' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
        }

        # ===== WEBSOCKET ROUTES =====
        # Socket.IO endpoint for discussion orchestration (Socket.IO only)
        location /socket.io/ {
            # Rate limiting for Socket.IO connections
            limit_req zone=websocket burst=20 nodelay;
            
            # Handle preflight OPTIONS requests for Socket.IO
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' $http_origin always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Session-ID,X-Security-Level,X-User-ID,X-Timestamp,X-Correlation-ID,X-Client-Version,X-Request-ID,X-Environment' always;
                add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Max-Age' 1728000 always;
                add_header 'Content-Type' 'text/plain; charset=utf-8' always;
                add_header 'Content-Length' 0 always;
                return 204;
            }
            
            proxy_pass http://discussion_orchestration;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Add CORS headers to all Socket.IO responses
            add_header 'Access-Control-Allow-Origin' $http_origin always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Session-ID,X-Security-Level,X-User-ID,X-Timestamp,X-Correlation-ID,X-Client-Version,X-Request-ID,X-Environment' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            
            # Socket.IO specific timeouts
            proxy_read_timeout 86400s;
            proxy_send_timeout 86400s;
        }
        
        # NOTE: Removed /ws endpoint - using Socket.IO only to prevent protocol conflicts
    }
} 